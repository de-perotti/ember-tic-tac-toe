name: Deploys

on:
  push

jobs:
  surge-deploy:
    name: Surge deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: [ 'imperative' ]
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - run: yarn install
      - run: yarn workspace ${{ matrix.package }} lint
      - run: yarn workspace ${{ matrix.package }} test
      - run: yarn workspace ${{ matrix.package }} build
      - name: Deploy to ${{ matrix.package }} to surge (latest)
        uses: dswistowski/surge-sh-action@v1
        env:
          latest_domain: perottidev-tic-tac-toe-${{ matrix.package }}.surge.sh
        with:
          domain: ${{ env.latest_domain }}
          project: ./packages/${{ matrix.package }}/dist
          login: ${{ secrets.surge_login }}
          token: ${{ secrets.surge_token }}
      - name: Calculate GITHUB SHA SHORT
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Set staging url
        id: staging_env
        run: echo "::set-output name=staging_url::perottidev-tic-tac-toe-${{ matrix.package }}-${{ steps.vars.outputs.sha_short }}.surge.sh"
      - name: Deploy to ${{ matrix.package }} to surge (sha)
        uses: dswistowski/surge-sh-action@v1
        with:
          domain: ${{ steps.staging_env.outputs.staging_url }}
          project: ./packages/${{ matrix.package }}/dist
          login: ${{ secrets.surge_login }}
          token: ${{ secrets.surge_token }}
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          repo: ${{ matrix.package }}
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Project hosted on https://surge.sh:
            ${{ steps.staging_env.outputs.staging_url }}
          prerelease: true
